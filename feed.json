{"title":"Luuil","description":"Plodding wins the race","language":["en","zh-Hans","default"],"link":"http://luuil.github.io","pubDate":"Sat, 15 Sep 2018 02:22:30 GMT","lastBuildDate":"Sat, 15 Sep 2018 03:01:40 GMT","generator":"hexo-generator-json-feed","webMaster":"L. Liu","items":[{"title":"Merging Models for TensorFlow Serving","link":"http://luuil.github.io/2018/09/15/Merging-Models-for-TensorFlow-Serving/","description":"This tool can merge TensorFlow frozen models(.pb file) into the same model. The advantage of doing this is that When deploying, you only need to place the updated version of the model(merged model) in the corresponding location without restart the TensorFlow Serving service. Hot switching can be done easily. That is, the service will not be interrupted when updating the model. See more details on GitHub. Usage Put frozen models(.pb file) into ./frozen directory. Add serving information in export_serving_model.py. Set update messages UPDATE_MESSAGE. Define a export(merging) function. Put ServingInfo.export decorator on export function(if not, then this model will not export). Run export_serving_model.py. Copy the serving model ./serving/{version} to your serving model directory on the server, it will be automatically loaded. Call it by RPC, such as gRPC.","pubDate":"Sat, 15 Sep 2018 02:22:30 GMT","guid":"http://luuil.github.io/2018/09/15/Merging-Models-for-TensorFlow-Serving/","category":"Tool"},{"title":"Commonly Used Docker Commands","link":"http://luuil.github.io/2018/09/08/Commonly-Used-Docker-Commands/","description":"常用的 Docker 命令本文集中了一些常用的 Docker 命令, 详细还请查看 官方文档. 查看容器: docker ps 查看镜像: docker images 运行镜像: docker run &lt;IMAGE&gt; 进入容器: docker exec -t -i &lt;CONTAINER&gt; /bin/bash 等","pubDate":"Sat, 08 Sep 2018 08:21:35 GMT","guid":"http://luuil.github.io/2018/09/08/Commonly-Used-Docker-Commands/","category":"Tutorial"},{"title":"LabelMe-Docker: Online Annotaion Tool Docker Image","link":"http://luuil.github.io/2018/09/07/LabelMe-Docker-Online-Annotaion-Tool-Docker-Image/","description":"LabelMe 是一个用 Javascript 编写的图像标注工具, 可以用于 在线 图像标注. 也就是说, LabelMe 可以部署在服务器, 然后使用浏览器进行访问. 与传统图像标注工具相比, 优势在于可以从任何地方访问该工具, 而且不需要在自己机器上安装或复制整个大型数据集. 我在空闲时间调研了该工具, 探索了其用法, 创建了此 docker 镜像, 并写成文档进行记录. 在该工具调研之后的 4 个月得到了团队的应用, 现我已将它部署在服务器, 以供外包人员能够远程进行标注. 它有如下优势 添加待标图片和获取标注结果方便. 降低外包人员招聘成本: 之前需要招聘专职标注人员到公司进行标注, 招聘难度大. 降低标注成本: 因为能够远程标注, 自由度高, 可以适当降低标注价格. 降低标注数据泄露的风险: 待标图片和标注结果均在服务器上. 截止目前(2018年9月), 已有 1 个项目(背景分割) 和 10 个标注人员使用该工具共标注了 ~7000 张图片,结果显示误标率较低, 约 3/1000, 且多数情况为误操作.","pubDate":"Fri, 07 Sep 2018 02:58:21 GMT","guid":"http://luuil.github.io/2018/09/07/LabelMe-Docker-Online-Annotaion-Tool-Docker-Image/","category":"Tool"},{"title":"Useful Plugins for Hexo","link":"http://luuil.github.io/2018/09/05/Useful-Plugins-for-Hexo/","description":"Useful plugins for Hexo hexo-deployer-git hexo-generator-json-feed hexo-generator-seo-friendly-sitemap hexo-generator-searchdb","pubDate":"Wed, 05 Sep 2018 08:36:10 GMT","guid":"http://luuil.github.io/2018/09/05/Useful-Plugins-for-Hexo/","category":"Tutorial"},{"title":"Github Pages with Hexo","link":"http://luuil.github.io/2018/09/04/Github-Pages-with-Hexo/","description":"Hexo 是一个快速、简洁且高效的博客框架.Hexo 使用 Markdown(或其他渲染引擎)解析文章, 在几秒内, 即可利用靓丽的主题生成静态网页. 简易教程本章主要介绍在使用 hexo 写文章时最常用的步骤, 如果想查看详细的内容可以查看 原始文档 或 下面的 补充内容. 在开始下面内容之前, 默认您已经安装过Hexo及其相关依赖, 并且已经设置好 Github 仓库.如果您还没做过上述操作, 请查看 原始文档 或 下面的 补充内容. 创建文章(存放至source/_posts) 1hexo new [layout] \"&lt;title&gt;\" 上述命令会按照指定的 layout (layout 即模板, 存放于 scaffolds 文件夹中)生成一个简略的文章. 丰富之前创建的简略文章 发布(可集中放在 deploy.sh 中) 123hexo cleanhexo generatehexo deploy 出现异常时, 可以参考 异常","pubDate":"Tue, 04 Sep 2018 12:40:14 GMT","guid":"http://luuil.github.io/2018/09/04/Github-Pages-with-Hexo/","category":"Tutorial"},{"title":"Hello World","link":"http://luuil.github.io/2018/09/03/hello-world/","description":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing","pubDate":"Mon, 03 Sep 2018 15:43:58 GMT","guid":"http://luuil.github.io/2018/09/03/hello-world/","category":""}]}